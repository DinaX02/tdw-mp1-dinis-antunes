# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - setup-inicial
  - deploy

image: node:20.9.0

before_script: npm install

setup-inicial-job:       # This job runs in the build stage, which runs first.
  stage: setup-inicial
  script:
    - npx prettier . --write
    - npx prettier . --check

test-setup-inicial-job:   # This job runs in the test stage.
  stage: setup-inicial    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests.. Please wait :)"
    - npm run test
    - echo "test done"

lint-setup-inicial-job:   # This job also runs in the test stage.
  stage: setup-inicial    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code..."
    - npm run lint
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "main"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "trigger"
  variables:
    CONTENTFUL_ACCESS_TOKEN: $CONTENTFUL_ACCESS_TOKEN
    CONTENTFUL_SPACE_ID: $CONTENTFUL_SPACE_ID
  script:
    - npm run build
    - npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
    - echo "Application successfully deployed."
